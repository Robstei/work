#--  CALCULATION AND DATA HANDLING --#	

	int minimumRt = 300;

	### COUNTERS ###
		int tooShort = 0;
		#correct answers
		int correctSum = 0;
		int correctCat1Sum = 0;
		int correctCat2Sum = 0;	
		int correctSNSSum = 0;
		int correctNeutralSum = 0;	
		int correctSNS1Sum = 0;
		int correctSNS2Sum = 0;
		int correctNS1Sum = 0;
		int correctNS2Sum = 0;
		
		int correctGoSum = 0;
		int correctGoCat1Sum = 0;
		int correctGoCat2Sum = 0;
		int correctGoSNSSum = 0;
		int correctGoNeutralSum = 0;
		int correctGoSNS1Sum = 0;
		int correctGoSNS2Sum = 0;
		int correctGoNS1Sum = 0;
		int correctGoNS2Sum = 0;
		
		int correctNoGoSum = 0;
		int correctNoGoCat1Sum = 0;
		int correctNoGoCat2Sum = 0;
		int correctNoGoSNSSum = 0;
		int correctNoGoNeutralSum = 0;
		int correctNoGoSNS1Sum = 0;
		int correctNoGoSNS2Sum = 0;
		int correctNoGoNS1Sum = 0;
		int correctNoGoNS2Sum = 0;	
		#false answers
		int falseSum = 0;
		int falseCat1Sum = 0;
		int falseCat2Sum = 0;	
		int falseSNSSum = 0;
		int falseNeutralSum = 0;
		int falseSNS1Sum = 0;
		int falseSNS2Sum = 0;
		int falseNS1Sum = 0;
		int falseNS2Sum = 0;
		
		int falseGoSum = 0;
		int falseGoCat1Sum = 0;
		int falseGoCat2Sum = 0;
		int falseGoSNSSum = 0;
		int falseGoNeutralSum = 0;
		int falseGoSNS1Sum = 0;
		int falseGoSNS2Sum = 0;
		int falseGoNS1Sum = 0;
		int falseGoNS2Sum = 0;
		
		int falseNoGoSum = 0;
		int falseNoGoCat1Sum = 0;
		int falseNoGoCat2Sum = 0;
		int falseNoGoSNSSum = 0;
		int falseNoGoNeutralSum = 0;
		int falseNoGoSNS1Sum = 0;
		int falseNoGoSNS2Sum = 0;
		int falseNoGoNS1Sum = 0;
		int falseNoGoNS2Sum = 0;	
		#reaction vs. no reaction
		int reactionSum = 0;
		int reactionCat1Sum = 0;
		int reactionCat2Sum = 0;	
		int reactionSNSSum = 0;
		int reactionNeutralSum = 0;	
		int reactionGoSum = 0;
		int reactionNoGoSum = 0;
		int reactionSNS1Sum = 0;
		int reactionSNS2Sum = 0;
		int reactionNS1Sum = 0;
		int reactionNS2Sum = 0;	
		
		int noReactionSum = 0;
		int noReactionCat1Sum = 0;
		int noReactionCat2Sum = 0;	
		int noReactionSNSSum = 0;
		int noReactionNeutralSum = 0;	
		int noReactionGoSum = 0;
		int noReactionNoGoSum = 0;	
		int noReactionSNS1Sum = 0;
		int noReactionSNS2Sum = 0;
		int noReactionNS1Sum = 0;
		int noReactionNS2Sum = 0;
	### COUNTERS ###
	
	### REACTION TIMES ###	
		int correctRt = 0;
		int correctCat1Rt = 0;
		int correctCat2Rt = 0;	
		int correctSNSRt = 0;
		int correctNeutralRt = 0;
		int correctSNS1Rt = 0;
		int correctSNS2Rt = 0;
		int correctNS1Rt = 0;
		int correctNS2Rt = 0;
		
		int correctGoRt = 0;
		int correctGoCat1Rt = 0;
		int correctGoCat2Rt = 0;
		int correctGoSNSRt = 0;
		int correctGoNeutralRt = 0;
		int correctGoSNS1Rt = 0;
		int correctGoSNS2Rt = 0;
		int correctGoNS1Rt = 0;
		int correctGoNS2Rt = 0;
		
		int correctNoGoRt = 0;
		int correctNoGoCat1Rt = 0;
		int correctNoGoCat2Rt = 0;
		int correctNoGoSNSRt = 0;
		int correctNoGoNeutralRt = 0;
		int correctNoGoSNS1Rt = 0;
		int correctNoGoSNS2Rt = 0;
		int correctNoGoNS1Rt = 0;
		int correctNoGoNS2Rt = 0;	
		#false answers
		int falseRt = 0;
		int falseCat1Rt = 0;
		int falseCat2Rt = 0;	
		int falseSNSRt = 0;
		int falseNeutralRt = 0;	
		int falseSNS1Rt = 0;
		int falseSNS2Rt = 0;
		int falseNS1Rt = 0;
		int falseNS2Rt = 0;
		
		int falseGoRt = 0;
		int falseGoCat1Rt = 0;
		int falseGoCat2Rt = 0;
		int falseGoSNSRt = 0;
		int falseGoNeutralRt = 0;
		int falseGoSNS1Rt = 0;
		int falseGoSNS2Rt = 0;
		int falseGoNS1Rt = 0;
		int falseGoNS2Rt = 0;
		
		int falseNoGoRt = 0;
		int falseNoGoCat1Rt = 0;
		int falseNoGoCat2Rt = 0;
		int falseNoGoSNSRt = 0;
		int falseNoGoNeutralRt = 0;
		int falseNoGoSNS1Rt = 0;
		int falseNoGoSNS2Rt = 0;
		int falseNoGoNS1Rt = 0;
		int falseNoGoNS2Rt = 0;	
		#reaction vs. no reaction
		int reactionRt = 0;
		int reactionCat1Rt = 0;
		int reactionCat2Rt = 0;	
		int reactionSNSRt = 0;
		int reactionNeutralRt = 0;	
		int reactionGoRt = 0;
		int reactionNoGoRt = 0;
		int reactionSNS1Rt = 0;
		int reactionSNS2Rt = 0;
		int reactionNS1Rt = 0;
		int reactionNS2Rt = 0;	
		
		int noReactionRt = 0;
		int noReactionCat1Rt = 0;
		int noReactionCat2Rt = 0;	
		int noReactionSNSRt = 0;
		int noReactionNeutralRt = 0;	
		int noReactionGoRt = 0;
		int noReactionNoGoRt = 0;	
		int noReactionSNS1Rt = 0;
		int noReactionSNS2Rt = 0;
		int noReactionNS1Rt = 0;
		int noReactionNS2Rt = 0;
	### REACTION TIMES ###



#--  CALCULATION AND DATA HANDLING --#
sub correctAndCalculateData
begin
	correctedData = rawData;
	
	loop
		int i = 1
	until
		i > blocksInTotal
	begin
		loop
			int j = 1
		until
			j > stimuliPerBlock
		begin		
			
			int rt = correctedData[i][j][3];
			int correct = correctedData[i][j][5];
			int go = correctedData[i][j][5];
			
			#false answer --> negative value < -1
			if correct == 0 then
				correctedData[i][j][3] = rt * (-1);
			end;
			
			#reaction in noGo-trial --> negative value < -1
			if correct == 0 && go == 0 then
				correctedData[i][j][3] = rt * (-1);
			end;
			
			#no reaction in go-trial --> -1
			if correct == 0 && go == 1 then
				correctedData[i][j][3] = -1;
			end;
			
			#reaction time is tooShort --> 1
			if rt > 0 && rt < minimumRt then
				correctedData[i][j][3] = 1;
				correctedData[i][j][5] = 0;
			end;			
			
			j = j + 1;
		end;
		i = i + 1;
	end;
	
	
	# 1=stimulus,2=position,3=rt,4=answerGiven,5=answerCorrect,6=goTrial
	# rawData[blocksInTotal][stimuliPerBlock][6];				
	loop
		int i = 1
	until
		i > blocksInTotal
	begin
		loop
			int j = 1
		until
			j > stimuliPerBlock
		begin			
			
			int stim = correctedData[i][j][1];
			int rt = correctedData[i][j][3];
			int given = correctedData[i][j][4];
			int correct = correctedData[i][j][5];
			int go = correctedData[i][j][6];
			
			if correct == 1 then
				
				correctSum = correctSum + 1;
				
				#Stimulus: SNS1
				if stim == 1 then					
					correctSNS1Sum = correctSNS1Sum + 1;
					correctSNSSum = correctSNSSum + 1;
					correctCat1Sum = correctCat1Sum + 1;
					
					correctSNS1Rt = correctSNS1Rt + rt;
					correctSNSRt = correctSNSRt + rt;
					correctCat1Rt = correctCat1Rt + rt;
					
					if go == 1 then
						correctGoSum = correctGoSum + 1;
						correctGoSNS1Sum = correctGoSNS1Sum + 1;
						correctGoSNSSum = correctGoSNSSum + 1;
						correctGoCat1Sum = correctGoCat1Sum + 1;
						
						correctGoRt = correctGoRt + rt;
						correctGoSNS1Rt = correctGoSNS1Rt + rt;
						correctGoSNSRt = correctGoSNSRt + rt;
						correctGoCat1Rt = correctGoCat1Rt + rt;
						
						if given == 1 then
							reactionSum = reactionSum + 1;
							reactionCat1Sum = reactionCat1Sum + 1;				
							reactionSNSSum = reactionSNSSum + 1;					
							reactionGoSum = reactionGoSum + 1;					
							reactionSNS1Sum = reactionSNS1Sum + 1;	

							reactionRt = reactionRt + rt;
							reactionCat1Rt = reactionCat1Rt + rt;				
							reactionSNSRt = reactionSNSRt + rt;					
							reactionGoRt = reactionGoRt + rt;					
							reactionSNS1Rt = reactionSNS1Rt + rt;
						else
							noReactionSum = noReactionSum + 1;
							noReactionCat1Sum = noReactionCat1Sum + 1;				
							noReactionSNSSum = noReactionSNSSum + 1;					
							noReactionGoSum = noReactionGoSum + 1;					
							noReactionSNS1Sum = noReactionSNS1Sum + 1;	
					
							noReactionRt = noReactionRt + rt;
							noReactionCat1Rt = noReactionCat1Rt + rt;				
							noReactionSNSRt = noReactionSNSRt + rt;					
							noReactionGoRt = noReactionGoRt + rt;					
							noReactionSNS1Rt = noReactionSNS1Rt + rt;	
						end;						
						
					else
						correctNoGoSum = correctNoGoSum + 1;
						correctNoGoSNS1Sum = correctNoGoSNS1Sum + 1;
						correctNoGoSNSSum = correctNoGoSNSSum + 1;
						correctNoGoCat1Sum = correctNoGoCat1Sum + 1;	
						
						correctNoGoRt = correctNoGoRt + rt;
						correctNoGoSNS1Rt = correctNoGoSNS1Rt + rt;
						correctNoGoSNSRt = correctNoGoSNSRt + rt;
						correctNoGoCat1Rt = correctNoGoCat1Rt + rt;	

						if given == 1 then
							reactionSum = reactionSum + 1;
							reactionCat1Sum = reactionCat1Sum + 1;				
							reactionSNSSum = reactionSNSSum + 1;					
							reactionNoGoSum = reactionNoGoSum + 1;					
							reactionSNS1Sum = reactionSNS1Sum + 1;	

							reactionRt = reactionRt + rt;
							reactionCat1Rt = reactionCat1Rt + rt;				
							reactionSNSRt = reactionSNSRt + rt;					
							reactionNoGoRt = reactionNoGoRt + rt;					
							reactionSNS1Rt = reactionSNS1Rt + rt;	
						else
							noReactionSum = noReactionSum + 1;
							noReactionCat1Sum = noReactionCat1Sum + 1;				
							noReactionSNSSum = noReactionSNSSum + 1;					
							noReactionNoGoSum = noReactionNoGoSum + 1;					
							noReactionSNS1Sum = noReactionSNS1Sum + 1;	

							noReactionRt = noReactionRt + rt;
							noReactionCat1Rt = noReactionCat1Rt + rt;				
							noReactionSNSRt = noReactionSNSRt + rt;					
							noReactionNoGoRt = noReactionNoGoRt + rt;					
							noReactionSNS1Rt = noReactionSNS1Rt + rt;		
						end;							
					end;
				#Stimulus: NS1
				elseif stim == 2 then
					correctNS1Sum = correctNS1Sum + 1;
					correctNeutralSum = correctNeutralSum + 1;
					correctCat1Sum = correctCat1Sum + 1;
					
					correctNS1Rt = correctNS1Rt + rt;
					correctNeutralRt = correctNeutralRt + rt;
					correctCat1Rt = correctCat1Rt + rt;
					
					if go == 1 then
						correctGoSum = correctGoSum + 1;
						correctGoNS1Sum = correctGoNS1Sum + 1;
						correctGoNeutralSum = correctGoNeutralSum + 1;
						correctGoCat1Sum = correctGoCat1Sum + 1;
						
						correctGoRt = correctGoRt + rt;
						correctGoNS1Rt = correctGoNS1Rt + rt;
						correctGoNeutralRt = correctGoNeutralRt + rt;
						correctGoCat1Rt = correctGoCat1Rt + rt;
						
						if given == 1 then
							reactionSum = reactionSum + 1;
							reactionCat1Sum = reactionCat1Sum + 1;				
							reactionNeutralSum = reactionNeutralSum + 1;					
							reactionGoSum = reactionGoSum + 1;					
							reactionNS1Sum = reactionNS1Sum + 1;	

							reactionRt = reactionRt + rt;
							reactionCat1Rt = reactionCat1Rt + rt;				
							reactionNeutralRt = reactionNeutralRt + rt;					
							reactionGoRt = reactionGoRt + rt;					
							reactionNS1Rt = reactionNS1Rt + rt;	
						else
							noReactionSum = noReactionSum + 1;
							noReactionCat1Sum = noReactionCat1Sum + 1;				
							noReactionNeutralSum = noReactionNeutralSum + 1;					
							noReactionGoSum = noReactionGoSum + 1;					
							noReactionNS1Sum = noReactionNS1Sum + 1;

							noReactionRt = noReactionRt + rt;
							noReactionCat1Rt = noReactionCat1Rt + rt;				
							noReactionNeutralRt = noReactionNeutralRt + rt;					
							noReactionGoRt = noReactionGoRt + rt;					
							noReactionNS1Rt = noReactionNS1Rt + rt;				
						end;	
						
					else
						correctNoGoSum = correctNoGoSum + 1;
						correctNoGoNS1Sum = correctNoGoNS1Sum + 1;
						correctNoGoNeutralSum = correctNoGoNeutralSum + 1;
						correctNoGoCat1Sum = correctNoGoCat1Sum + 1;
						
						correctNoGoRt = correctNoGoRt + rt;
						correctNoGoNS1Rt = correctNoGoNS1Rt + rt;
						correctNoGoNeutralRt = correctNoGoNeutralRt + rt;
						correctNoGoCat1Rt = correctNoGoCat1Rt + rt;
						
						if given == 1 then
							reactionSum = reactionSum + 1;
							reactionCat1Sum = reactionCat1Sum + 1;				
							reactionNeutralSum = reactionNeutralSum + 1;					
							reactionNoGoSum = reactionNoGoSum + 1;					
							reactionNS1Sum = reactionNS1Sum + 1;			
							
							reactionRt = reactionRt + rt;
							reactionCat1Rt = reactionCat1Rt + rt;				
							reactionNeutralRt = reactionNeutralRt + rt;					
							reactionNoGoRt = reactionNoGoRt + rt;					
							reactionNS1Rt = reactionNS1Rt + rt;	
						else
							noReactionSum = noReactionSum + 1;
							noReactionCat1Sum = noReactionCat1Sum + 1;				
							noReactionNeutralSum = noReactionNeutralSum + 1;					
							noReactionNoGoSum = noReactionNoGoSum + 1;					
							noReactionNS1Sum = noReactionNS1Sum + 1;	

							noReactionRt = noReactionRt + rt;
							noReactionCat1Rt = noReactionCat1Rt + rt;				
							noReactionNeutralRt = noReactionNeutralRt + rt;					
							noReactionNoGoRt = noReactionNoGoRt + rt;					
							noReactionNS1Rt = noReactionNS1Rt + rt;	
						end;	
						
					end;
				#Stimulus: SNS2
				elseif stim == 3 then
					correctSNS2Sum = correctSNS2Sum + 1;
					correctSNSSum = correctSNSSum + 1;
					correctCat2Sum = correctCat2Sum + 1;
					
					correctSNS2Rt = correctSNS2Rt + rt;
					correctSNSRt = correctSNSRt + rt;
					correctCat2Rt = correctCat2Rt + rt;
					
					if go == 1 then
						correctGoSum = correctGoSum + 1;
						correctGoSNS2Sum = correctGoSNS2Sum + 1;
						correctGoSNSSum = correctGoSNSSum + 1;
						correctGoCat2Sum = correctGoCat2Sum + 1;
						
						correctGoRt = correctGoRt + rt;
						correctGoSNS2Rt = correctGoSNS2Rt + rt;
						correctGoSNSRt = correctGoSNSRt + rt;
						correctGoCat2Rt = correctGoCat2Rt + rt;
						
						if given == 1 then
							reactionSum = reactionSum + 1;
							reactionCat2Sum = reactionCat2Sum + 1;				
							reactionSNSSum = reactionSNSSum + 1;					
							reactionGoSum = reactionGoSum + 1;					
							reactionSNS2Sum = reactionSNS2Sum + 1;
							
							reactionRt = reactionRt + rt;
							reactionCat2Rt = reactionCat2Rt + rt;				
							reactionSNSRt = reactionSNSRt + rt;					
							reactionGoRt = reactionGoRt + rt;					
							reactionSNS2Rt = reactionSNS2Rt + rt;
						else
							noReactionSum = noReactionSum + 1;
							noReactionCat2Sum = noReactionCat2Sum + 1;				
							noReactionSNSSum = noReactionSNSSum + 1;					
							noReactionGoSum = noReactionGoSum + 1;					
							noReactionSNS2Sum = noReactionSNS2Sum + 1;
							
							noReactionRt = noReactionRt + rt;
							noReactionCat2Rt = noReactionCat2Rt + rt;				
							noReactionSNSRt = noReactionSNSRt + rt;					
							noReactionGoRt = noReactionGoRt + rt;					
							noReactionSNS2Rt = noReactionSNS2Rt + rt;
						end;	
						
					else
						correctNoGoSum = correctNoGoSum + 1;
						correctNoGoSNS2Sum = correctNoGoSNS2Sum + 1;
						correctNoGoSNSSum = correctNoGoSNSSum + 1;
						correctNoGoCat2Sum = correctNoGoCat2Sum + 1;
						
						correctNoGoRt = correctNoGoRt + rt;
						correctNoGoSNS2Rt = correctNoGoSNS2Rt + rt;
						correctNoGoSNSRt = correctNoGoSNSRt + rt;
						correctNoGoCat2Rt = correctNoGoCat2Rt + rt;
						
						if given == 1 then
							reactionSum = reactionSum + 1;
							reactionCat2Sum = reactionCat2Sum + 1;				
							reactionSNSSum = reactionSNSSum + 1;					
							reactionNoGoSum = reactionNoGoSum + 1;					
							reactionSNS2Sum = reactionSNS2Sum + 1;	

							reactionRt = reactionRt + rt;
							reactionCat2Rt = reactionCat2Rt + rt;				
							reactionSNSRt = reactionSNSRt + rt;					
							reactionNoGoRt = reactionNoGoRt + rt;					
							reactionSNS2Rt = reactionSNS2Rt + rt;	
						else
							noReactionSum = noReactionSum + 1;
							noReactionCat2Sum = noReactionCat2Sum + 1;				
							noReactionSNSSum = noReactionSNSSum + 1;					
							noReactionNoGoSum = noReactionNoGoSum + 1;					
							noReactionSNS2Sum = noReactionSNS2Sum + 1;

							noReactionRt = noReactionRt + rt;
							noReactionCat2Rt = noReactionCat2Rt + rt;				
							noReactionSNSRt = noReactionSNSRt + rt;					
							noReactionNoGoRt = noReactionNoGoRt + rt;					
							noReactionSNS2Rt = noReactionSNS2Rt + rt;		
						end;	
						
					end;
				#Stimulus: NS2
				elseif stim == 4 then
					correctNS2Sum = correctNS2Sum + 1;
					correctNeutralSum = correctNeutralSum + 1;
					correctCat2Sum = correctCat2Sum + 1;
					
					correctNS2Rt = correctNS2Rt + rt;
					correctNeutralRt = correctNeutralRt + rt;
					correctCat2Rt = correctCat2Rt + rt;
					
					if go == 1 then
						correctGoSum = correctGoSum + 1;
						correctGoNS2Sum = correctGoNS2Sum + 1;
						correctGoNeutralSum = correctGoNeutralSum + 1;
						correctGoCat2Sum = correctGoCat2Sum + 1;
						
						correctGoRt = correctGoRt + rt;
						correctGoNS2Rt = correctGoNS2Rt + rt;
						correctGoNeutralRt = correctGoNeutralRt + rt;
						correctGoCat2Rt = correctGoCat2Rt + rt;
						
						if given == 1 then
							reactionSum = reactionSum + 1;
							reactionCat2Sum = reactionCat2Sum + 1;				
							reactionNeutralSum = reactionNeutralSum + 1;					
							reactionGoSum = reactionGoSum + 1;					
							reactionNS2Sum = reactionNS2Sum + 1;	

							reactionRt = reactionRt + rt;
							reactionCat2Rt = reactionCat2Rt + rt;				
							reactionNeutralRt = reactionNeutralRt + rt;					
							reactionGoRt = reactionGoRt + rt;					
							reactionNS2Rt= reactionNS2Rt + rt;	
						else
							noReactionSum = noReactionSum + 1;
							noReactionCat2Sum = noReactionCat2Sum + 1;				
							noReactionNeutralSum = noReactionNeutralSum + 1;					
							noReactionGoSum = noReactionGoSum + 1;					
							noReactionNS2Sum = noReactionNS2Sum + 1;	

							noReactionRt = noReactionRt + rt;
							noReactionCat2Rt = noReactionCat2Rt + rt;				
							noReactionNeutralRt = noReactionNeutralRt + rt;					
							noReactionGoRt = noReactionGoRt + rt;					
							noReactionNS2Rt = noReactionNS2Rt + rt;	
						end;	
						
					else
						correctNoGoSum = correctNoGoSum + 1;
						correctNoGoNS2Sum = correctNoGoNS2Sum + 1;
						correctNoGoNeutralSum = correctNoGoNeutralSum + 1;
						correctNoGoCat2Sum = correctNoGoCat2Sum + 1;
						
						correctNoGoRt = correctNoGoRt + rt;
						correctNoGoNS2Rt = correctNoGoNS2Rt + rt;
						correctNoGoNeutralRt = correctNoGoNeutralRt + rt;
						correctNoGoCat2Rt = correctNoGoCat2Rt + rt;
						
						if given == 1 then
							reactionSum = reactionSum + 1;
							reactionCat2Sum = reactionCat2Sum + 1;				
							reactionNeutralSum = reactionNeutralSum + 1;					
							reactionNoGoSum = reactionNoGoSum + 1;					
							reactionNS2Sum = reactionNS2Sum + 1;

							reactionRt = reactionRt + rt;
							reactionCat2Rt = reactionCat2Rt + rt;				
							reactionNeutralRt = reactionNeutralRt + rt;					
							reactionNoGoRt = reactionNoGoRt + rt;					
							reactionNS2Rt = reactionNS2Rt + rt;	
						else
							noReactionSum = noReactionSum + 1;
							noReactionCat2Sum = noReactionCat2Sum + 1;				
							noReactionNeutralSum = noReactionNeutralSum + 1;					
							noReactionNoGoSum = noReactionNoGoSum + 1;					
							noReactionNS2Sum = noReactionNS2Sum + 1;		
							
							noReactionRt = noReactionRt + rt;
							noReactionCat2Rt = noReactionCat2Rt + rt;				
							noReactionNeutralRt = noReactionNeutralRt + rt;					
							noReactionNoGoRt = noReactionNoGoRt + rt;					
							noReactionNS2Rt = noReactionNS2Rt + rt;	
						end;							
					end;					
				end;			
			#answer was false
			else
				if rt == 1 then
					tooShort = tooShort + 1;
				else
					falseSum = falseSum + 1;
					#Stimulus: SNS1
					if stim == 1 then					
						falseSNS1Sum = falseSNS1Sum + 1;
						falseSNSSum = falseSNSSum + 1;
						falseCat1Sum = falseCat1Sum + 1;
						
						falseSNS1Rt = falseSNS1Rt + rt;
						falseSNSRt = falseSNSRt + rt;
						falseCat1Rt = falseCat1Rt + rt;
						
						if go == 1 then
							falseGoSum = falseGoSum + 1;
							falseGoSNS1Sum = falseGoSNS1Sum + 1;
							falseGoSNSSum = falseGoSNSSum + 1;
							falseGoCat1Sum = falseGoCat1Sum + 1;
							
							falseGoRt = falseGoRt + rt;
							falseGoSNS1Rt = falseGoSNS1Rt + rt;
							falseGoSNSRt = falseGoSNSRt + rt;
							falseGoCat1Rt = falseGoCat1Rt + rt;
							
							if given == 1 then
								reactionSum = reactionSum + 1;
								reactionCat1Sum = reactionCat1Sum + 1;				
								reactionSNSSum = reactionSNSSum + 1;					
								reactionGoSum = reactionGoSum + 1;					
								reactionSNS1Sum = reactionSNS1Sum + 1;	

								reactionRt = reactionRt + rt;
								reactionCat1Rt = reactionCat1Rt + rt;				
								reactionSNSRt = reactionSNSRt + rt;					
								reactionGoRt = reactionGoRt + rt;					
								reactionSNS1Rt = reactionSNS1Rt + rt;
							else
								noReactionSum = noReactionSum + 1;
								noReactionCat1Sum = noReactionCat1Sum + 1;				
								noReactionSNSSum = noReactionSNSSum + 1;					
								noReactionGoSum = noReactionGoSum + 1;					
								noReactionSNS1Sum = noReactionSNS1Sum + 1;	
						
								noReactionRt = noReactionRt + rt;
								noReactionCat1Rt = noReactionCat1Rt + rt;				
								noReactionSNSRt = noReactionSNSRt + rt;					
								noReactionGoRt = noReactionGoRt + rt;					
								noReactionSNS1Rt = noReactionSNS1Rt + rt;	
							end;						
							
						else
							falseNoGoSum = falseNoGoSum + 1;
							falseNoGoSNS1Sum = falseNoGoSNS1Sum + 1;
							falseNoGoSNSSum = falseNoGoSNSSum + 1;
							falseNoGoCat1Sum = falseNoGoCat1Sum + 1;	
							
							falseNoGoRt = falseNoGoRt + rt;
							falseNoGoSNS1Rt = falseNoGoSNS1Rt + rt;
							falseNoGoSNSRt = falseNoGoSNSRt + rt;
							falseNoGoCat1Rt = falseNoGoCat1Rt + rt;	

							if given == 1 then
								reactionSum = reactionSum + 1;
								reactionCat1Sum = reactionCat1Sum + 1;				
								reactionSNSSum = reactionSNSSum + 1;					
								reactionNoGoSum = reactionNoGoSum + 1;					
								reactionSNS1Sum = reactionSNS1Sum + 1;	

								reactionRt = reactionRt + rt;
								reactionCat1Rt = reactionCat1Rt + rt;				
								reactionSNSRt = reactionSNSRt + rt;					
								reactionNoGoRt = reactionNoGoRt + rt;					
								reactionSNS1Rt = reactionSNS1Rt + rt;	
							else
								noReactionSum = noReactionSum + 1;
								noReactionCat1Sum = noReactionCat1Sum + 1;				
								noReactionSNSSum = noReactionSNSSum + 1;					
								noReactionNoGoSum = noReactionNoGoSum + 1;					
								noReactionSNS1Sum = noReactionSNS1Sum + 1;	

								noReactionRt = noReactionRt + rt;
								noReactionCat1Rt = noReactionCat1Rt + rt;				
								noReactionSNSRt = noReactionSNSRt + rt;					
								noReactionNoGoRt = noReactionNoGoRt + rt;					
								noReactionSNS1Rt = noReactionSNS1Rt + rt;		
							end;			
							
						end;
					#Stimulus: NS1
					elseif stim == 2 then
						falseNS1Sum = falseNS1Sum + 1;
						falseNeutralSum = falseNeutralSum + 1;
						falseCat1Sum = falseCat1Sum + 1;
						
						falseNS1Rt = falseNS1Rt + rt;
						falseNeutralRt = falseNeutralRt + rt;
						falseCat1Rt = falseCat1Rt + rt;
						
						if go == 1 then
							falseGoSum = falseGoSum + 1;
							falseGoNS1Sum = falseGoNS1Sum + 1;
							falseGoNeutralSum = falseGoNeutralSum + 1;
							falseGoCat1Sum = falseGoCat1Sum + 1;
							
							falseGoRt = falseGoRt + rt;
							falseGoNS1Rt = falseGoNS1Rt + rt;
							falseGoNeutralRt = falseGoNeutralRt + rt;
							falseGoCat1Rt = falseGoCat1Rt + rt;
							
							if given == 1 then
								reactionSum = reactionSum + 1;
								reactionCat1Sum = reactionCat1Sum + 1;				
								reactionNeutralSum = reactionNeutralSum + 1;					
								reactionGoSum = reactionGoSum + 1;					
								reactionNS1Sum = reactionNS1Sum + 1;	

								reactionRt = reactionRt + rt;
								reactionCat1Rt = reactionCat1Rt + rt;				
								reactionNeutralRt = reactionNeutralRt + rt;					
								reactionGoRt = reactionGoRt + rt;					
								reactionNS1Rt = reactionNS1Rt + rt;	
							else
								noReactionSum = noReactionSum + 1;
								noReactionCat1Sum = noReactionCat1Sum + 1;				
								noReactionNeutralSum = noReactionNeutralSum + 1;					
								noReactionGoSum = noReactionGoSum + 1;					
								noReactionNS1Sum = noReactionNS1Sum + 1;

								noReactionRt = noReactionRt + rt;
								noReactionCat1Rt = noReactionCat1Rt + rt;				
								noReactionNeutralRt = noReactionNeutralRt + rt;					
								noReactionGoRt = noReactionGoRt + rt;					
								noReactionNS1Rt = noReactionNS1Rt + rt;				
							end;	
							
						else
							falseNoGoSum = falseNoGoSum + 1;
							falseNoGoNS1Sum = falseNoGoNS1Sum + 1;
							falseNoGoNeutralSum = falseNoGoNeutralSum + 1;
							falseNoGoCat1Sum = falseNoGoCat1Sum + 1;
							
							falseNoGoRt = falseNoGoRt + rt;
							falseNoGoNS1Rt = falseNoGoNS1Rt + rt;
							falseNoGoNeutralRt = falseNoGoNeutralRt + rt;
							falseNoGoCat1Rt = falseNoGoCat1Rt + rt;
							
							if given == 1 then
								reactionSum = reactionSum + 1;
								reactionCat1Sum = reactionCat1Sum + 1;				
								reactionNeutralSum = reactionNeutralSum + 1;					
								reactionNoGoSum = reactionNoGoSum + 1;					
								reactionNS1Sum = reactionNS1Sum + 1;			
								
								reactionRt = reactionRt + rt;
								reactionCat1Rt = reactionCat1Rt + rt;				
								reactionNeutralRt = reactionNeutralRt + rt;					
								reactionNoGoRt = reactionNoGoRt + rt;					
								reactionNS1Rt = reactionNS1Rt + rt;	
							else
								noReactionSum = noReactionSum + 1;
								noReactionCat1Sum = noReactionCat1Sum + 1;				
								noReactionNeutralSum = noReactionNeutralSum + 1;					
								noReactionNoGoSum = noReactionNoGoSum + 1;					
								noReactionNS1Sum = noReactionNS1Sum + 1;	

								noReactionRt = noReactionRt + rt;
								noReactionCat1Rt = noReactionCat1Rt + rt;				
								noReactionNeutralRt = noReactionNeutralRt + rt;					
								noReactionNoGoRt = noReactionNoGoRt + rt;					
								noReactionNS1Rt = noReactionNS1Rt + rt;	
							end;	
							
						end;
					#Stimulus: SNS2
					elseif stim == 3 then
						falseSNS2Sum = falseSNS2Sum + 1;
						falseSNSSum = falseSNSSum + 1;
						falseCat2Sum = falseCat2Sum + 1;
						
						falseSNS2Rt = falseSNS2Rt + rt;
						falseSNSRt = falseSNSRt + rt;
						falseCat2Rt = falseCat2Rt + rt;
						
						if go == 1 then
							falseGoSum = falseGoSum + 1;
							falseGoSNS2Sum = falseGoSNS2Sum + 1;
							falseGoSNSSum = falseGoSNSSum + 1;
							falseGoCat2Sum = falseGoCat2Sum + 1;
							
							falseGoRt = falseGoRt + rt;
							falseGoSNS2Rt = falseGoSNS2Rt + rt;
							falseGoSNSRt = falseGoSNSRt + rt;
							falseGoCat2Rt = falseGoCat2Rt + rt;
							
							if given == 1 then
								reactionSum = reactionSum + 1;
								reactionCat2Sum = reactionCat2Sum + 1;				
								reactionSNSSum = reactionSNSSum + 1;					
								reactionGoSum = reactionGoSum + 1;					
								reactionSNS2Sum = reactionSNS2Sum + 1;
								
								reactionRt = reactionRt + rt;
								reactionCat2Rt = reactionCat2Rt + rt;				
								reactionSNSRt = reactionSNSRt + rt;					
								reactionGoRt = reactionGoRt + rt;					
								reactionSNS2Rt = reactionSNS2Rt + rt;
							else
								noReactionSum = noReactionSum + 1;
								noReactionCat2Sum = noReactionCat2Sum + 1;				
								noReactionSNSSum = noReactionSNSSum + 1;					
								noReactionGoSum = noReactionGoSum + 1;					
								noReactionSNS2Sum = noReactionSNS2Sum + 1;
								
								noReactionRt = noReactionRt + rt;
								noReactionCat2Rt = noReactionCat2Rt + rt;				
								noReactionSNSRt = noReactionSNSRt + rt;					
								noReactionGoRt = noReactionGoRt + rt;					
								noReactionSNS2Rt = noReactionSNS2Rt + rt;
							end;	
							
						else
							falseNoGoSum = falseNoGoSum + 1;
							falseNoGoSNS2Sum = falseNoGoSNS2Sum + 1;
							falseNoGoSNSSum = falseNoGoSNSSum + 1;
							falseNoGoCat2Sum = falseNoGoCat2Sum + 1;
							
							falseNoGoRt = falseNoGoRt + rt;
							falseNoGoSNS2Rt = falseNoGoSNS2Rt + rt;
							falseNoGoSNSRt = falseNoGoSNSRt + rt;
							falseNoGoCat2Rt = falseNoGoCat2Rt + rt;
							
							if given == 1 then
								reactionSum = reactionSum + 1;
								reactionCat2Sum = reactionCat2Sum + 1;				
								reactionSNSSum = reactionSNSSum + 1;					
								reactionNoGoSum = reactionNoGoSum + 1;					
								reactionSNS2Sum = reactionSNS2Sum + 1;	

								reactionRt = reactionRt + rt;
								reactionCat2Rt = reactionCat2Rt + rt;				
								reactionSNSRt = reactionSNSRt + rt;					
								reactionNoGoRt = reactionNoGoRt + rt;					
								reactionSNS2Rt = reactionSNS2Rt + rt;	
							else
								noReactionSum = noReactionSum + 1;
								noReactionCat2Sum = noReactionCat2Sum + 1;				
								noReactionSNSSum = noReactionSNSSum + 1;					
								noReactionNoGoSum = noReactionNoGoSum + 1;					
								noReactionSNS2Sum = noReactionSNS2Sum + 1;

								noReactionRt = noReactionRt + rt;
								noReactionCat2Rt = noReactionCat2Rt + rt;				
								noReactionSNSRt = noReactionSNSRt + rt;					
								noReactionNoGoRt = noReactionNoGoRt + rt;					
								noReactionSNS2Rt = noReactionSNS2Rt + rt;		
							end;	
							
						end;
					#Stimulus: NS2
					elseif stim == 4 then
						falseNS2Sum = falseNS2Sum + 1;
						falseNeutralSum = falseNeutralSum + 1;
						falseCat2Sum = falseCat2Sum + 1;
						
						falseNS2Rt = falseNS2Rt + rt;
						falseNeutralRt = falseNeutralRt + rt;
						falseCat2Rt = falseCat2Rt + rt;
						
						if go == 1 then
							falseGoSum = falseGoSum + 1;
							falseGoNS2Sum = falseGoNS2Sum + 1;
							falseGoNeutralSum = falseGoNeutralSum + 1;
							falseGoCat2Sum = falseGoCat2Sum + 1;
							
							falseGoRt = falseGoRt + rt;
							falseGoNS2Rt = falseGoNS2Rt + rt;
							falseGoNeutralRt = falseGoNeutralRt + rt;
							falseGoCat2Rt = falseGoCat2Rt + rt;
							
							if given == 1 then
								reactionSum = reactionSum + 1;
								reactionCat2Sum = reactionCat2Sum + 1;				
								reactionNeutralSum = reactionNeutralSum + 1;					
								reactionGoSum = reactionGoSum + 1;					
								reactionNS2Sum = reactionNS2Sum + 1;	

								reactionRt = reactionRt + rt;
								reactionCat2Rt = reactionCat2Rt + rt;				
								reactionNeutralRt = reactionNeutralRt + rt;					
								reactionGoRt = reactionGoRt + rt;					
								reactionNS2Rt = reactionNS2Rt + rt;	
							else
								noReactionSum = noReactionSum + 1;
								noReactionCat2Sum = noReactionCat2Sum + 1;				
								noReactionNeutralSum = noReactionNeutralSum + 1;					
								noReactionGoSum = noReactionGoSum + 1;					
								noReactionNS2Sum = noReactionNS2Sum + 1;	

								noReactionRt = noReactionRt + rt;
								noReactionCat2Rt = noReactionCat2Rt + rt;				
								noReactionNeutralRt = noReactionNeutralRt + rt;					
								noReactionGoRt = noReactionGoRt + rt;					
								noReactionNS2Rt = noReactionNS2Rt + rt;	
							end;	
							
						else
							falseNoGoSum = falseNoGoSum + 1;
							falseNoGoNS2Sum = falseNoGoNS2Sum + 1;
							falseNoGoNeutralSum = falseNoGoNeutralSum + 1;
							falseNoGoCat2Sum = falseNoGoCat2Sum + 1;
							
							falseNoGoRt = falseNoGoRt + rt;
							falseNoGoNS2Rt = falseNoGoNS2Rt + rt;
							falseNoGoNeutralRt = falseNoGoNeutralRt + rt;
							falseNoGoCat2Rt = falseNoGoCat2Rt + rt;
							
							if given == 1 then
								reactionSum = reactionSum + 1;
								reactionCat2Sum = reactionCat2Sum + 1;				
								reactionNeutralSum = reactionNeutralSum + 1;					
								reactionNoGoSum = reactionNoGoSum + 1;					
								reactionNS2Sum = reactionNS2Sum + 1;

								reactionRt = reactionRt + rt;
								reactionCat2Rt = reactionCat2Rt + rt;				
								reactionNeutralRt = reactionNeutralRt + rt;					
								reactionNoGoRt = reactionNoGoRt + rt;					
								reactionNS2Rt = reactionNS2Rt + rt;	
							else
								noReactionSum = noReactionSum + 1;
								noReactionCat2Sum = noReactionCat2Sum + 1;				
								noReactionNeutralSum = noReactionNeutralSum + 1;					
								noReactionNoGoSum = noReactionNoGoSum + 1;					
								noReactionNS2Sum = noReactionNS2Sum + 1;		
								
								noReactionRt = noReactionRt + rt;
								noReactionCat2Rt = noReactionCat2Rt + rt;				
								noReactionNeutralRt = noReactionNeutralRt + rt;					
								noReactionNoGoRt = noReactionNoGoRt + rt;					
								noReactionNS2Rt = noReactionNS2Rt + rt;	
							end;							
						end;					
					end;
				end;
			end;
			j = j + 1;
		end;					
		i = i + 1;
	end;
	
	#calculate mean values
	if correctGoSum > 0 then
		correctRt = correctRt / correctGoSum;
	end;
	if correctGoCat1Sum > 0 then
		correctCat1Rt = correctCat1Rt / correctGoCat1Sum;
	end;	
	if correctGoCat2Sum > 0 then	
		correctCat2Rt = correctCat2Rt / correctGoCat2Sum;	
	end;
	if correctGoSNSSum > 0 then
		correctSNSRt = correctSNSRt / correctGoSNSSum;
	end;	
	if correctGoNeutralSum > 0 then
		correctNeutralRt = correctNeutralRt / correctGoNeutralSum;
	end;	
	if correctGoSNS1Sum > 0 then
		correctSNS1Rt = correctSNS1Rt / correctGoSNS1Sum;
	end;	
	if correctGoSNS2Sum > 0 then
		correctSNS2Rt = correctSNS2Rt / correctGoSNS2Sum;
	end;	
	if correctGoNS1Sum > 0 then
		correctNS1Rt = correctNS1Rt / correctGoNS1Sum;
	end;	
	if correctGoNS2Sum > 0 then
		 correctNS2Rt = correctNS2Rt / correctGoNS2Sum;
	end;		
	#false answers	
	if falseGoSum > 0 then
		falseRt = falseRt / falseGoSum;
	end;
	if falseGoCat1Sum > 0 then
		falseCat1Rt = falseCat1Rt / falseGoCat1Sum;
	end;	
	if falseGoCat2Sum > 0 then	
		falseCat2Rt = falseCat2Rt / falseGoCat2Sum;	
	end;
	if falseGoSNSSum > 0 then
		falseSNSRt = falseSNSRt / falseGoSNSSum;
	end;	
	if falseGoNeutralSum > 0 then
		falseNeutralRt = falseNeutralRt / falseGoNeutralSum;
	end;	
	if falseGoSNS1Sum > 0 then
		falseSNS1Rt = falseSNS1Rt / falseGoSNS1Sum;
	end;	
	if falseGoSNS2Sum > 0 then
		falseSNS2Rt = falseSNS2Rt / falseGoSNS2Sum;
	end;	
	if falseGoNS1Sum > 0 then
		falseNS1Rt = falseNS1Rt / falseGoNS1Sum;
	end;	
	if falseGoNS2Sum > 0 then
		 falseNS2Rt = falseNS2Rt / falseGoNS2Sum;
	end;		
	#reaction vs. no reaction
	if reactionSum > 0 then
		reactionRt = reactionRt / reactionSum;
	end;	
	if reactionCat1Sum > 0 then
		reactionCat1Rt = reactionCat1Rt / reactionCat1Sum;
	end;	
	if reactionCat2Sum > 0 then
		reactionCat2Rt = reactionCat2Rt / reactionCat2Sum;
	end;
	if reactionSNSSum > 0 then
		reactionSNSRt = reactionSNSRt / reactionSNSSum;
	end;	
	if reactionNeutralSum > 0 then
		reactionNeutralRt = reactionNeutralRt / reactionNeutralSum;
	end;
	if reactionGoSum > 0 then
		reactionGoRt = reactionGoRt / reactionGoSum;
	end;	
	if reactionNoGoSum > 0 then
		reactionNoGoRt = reactionNoGoRt / reactionNoGoSum;
	end;	
	if reactionSNS1Sum > 0 then
		reactionSNS1Rt = reactionSNS1Rt / reactionSNS1Sum;
	end;	
	if reactionSNS2Sum > 0 then
		reactionSNS2Rt = reactionSNS2Rt / reactionSNS2Sum;
	end;	
	if reactionNS1Sum > 0 then
		reactionNS1Rt = reactionNS1Rt / reactionNS1Sum;
	end;
	if reactionNS2Sum > 0 then	
		reactionNS2Rt = reactionNS2Rt / reactionNS2Sum;
	end;
end;

#-- /CALCULATION AND DATA HANDLING --#

#--  DATA EXPORT --#
sub exportData
begin	
	#single
	string filename1 = "singles/GoNoGo_mod_" + vpCode + ".txt";
	output_file output1 = new output_file;
	output1.open_append(filename1);
	#all
	string filename2 = "GoNoGo_mod_ALL.txt";
	output_file output2 = new output_file;
	output2.open_append(filename2);
	
	#GENERATE VARIABLENAMES
	if exportVariableNames == true then
		string variableNames = "Code,Date,experimentGroup,";
		variableNames = variableNames + "COUNTERS,";
		variableNames = variableNames + "tooShort,correctSum,correctCat1Sum,correctCat2Sum,correctSNSSum,correctNeutralSum,correctSNS1Sum,correctSNS2Sum,correctNS1Sum,correctNS2Sum,";
		variableNames = variableNames +  "correctGoSum,correctGoCat1Sum,correctGoCat2Sum,correctGoSNSSum,correctGoNeutralSum,correctGoSNS1Sum,correctGoSNS2Sum,correctGoNS1Sum,correctGoNS2Sum,";
		variableNames = variableNames +  "correctNoGoSum,correctNoGoCat1Sum,correctNoGoCat2Sum,correctNoGoSNSSum,correctNoGoNeutralSum,correctNoGoSNS1Sum,correctNoGoSNS2Sum,correctNoGoNS1Sum,correctNoGoNS2Sum,";
		variableNames = variableNames +  "falseSum,falseCat1Sum,falseCat2Sum,falseSNSSum,falseNeutralSum,falseSNS1Sum,falseSNS2Sum,falseNS1Sum,falseNS2Sum,";
		variableNames = variableNames +  "falseGoSum,falseGoCat1Sum,falseGoCat2Sum,falseGoSNSSum,falseGoNeutralSum,falseGoSNS1Sum,falseGoSNS2Sum,falseGoNS1Sum,falseGoNS2Sum,";
		variableNames = variableNames +  "falseNoGoSum,falseNoGoCat1Sum,falseNoGoCat2Sum,falseNoGoSNSSum,falseNoGoNeutralSum,falseNoGoSNS1Sum,falseNoGoSNS2Sum,falseNoGoNS1Sum,falseNoGoNS2Sum,";
		variableNames = variableNames +  "reactionSum,reactionCat1Sum,reactionCat2Sum,reactionSNSSum,reactionNeutralSum,reactionGoSum,reactionNoGoSum,reactionSNS1Sum,reactionSNS2Sum,reactionNS1Sum,reactionNS2Sum,";		
		variableNames = variableNames +  "noReactionSum,noReactionCat1Sum,noReactionCat2Sum,noReactionSNSSum,noReactionNeutralSum,noReactionGoSum,noReactionNoGoSum,noReactionSNS1Sum,noReactionSNS2Sum,noReactionNS1Sum,noReactionNS2Sum,";	
		variableNames = variableNames +  "REACTION_TIMES,";
		variableNames = variableNames + "correctRt,correctCat1Rt,correctCat2Rt,correctSNSRt,correctNeutralRt,correctSNS1Rt,correctSNS2Rt,correctNS1Rt,correctNS2Rt,";
		variableNames = variableNames +  "falseRt,falseCat1Rt,falseCat2Rt,falseSNSRt,falseNeutralRt,falseSNS1Rt,falseSNS2Rt,falseNS1Rt,falseNS2Rt,";
		variableNames = variableNames +  "reactionRt,reactionCat1Rt,reactionCat2Rt,reactionSNSRt,reactionNeutralRt,reactionGoRt,reactionSNS1Rt,reactionSNS2Rt,reactionNS1Rt,reactionNS2Rt,";		
		variableNames = variableNames +  "RAW_DATA,";		 
	
		
		int count = 1;
		

		# 1=stimulus,2=position,3=rt,4=answerGiven,5=answerCorrect,6=goTrial
		loop
			int i = 1
		until
			i > 80
		begin				
			#reaction times
			variableNames = variableNames + "rt_";
			if i < 10 then
				variableNames = variableNames + "0";
			end;
			variableNames = variableNames + string(i);
			variableNames = variableNames + ",";
			i = i + 1;
		end;

		loop
			int i = 1
		until
			i > 80
		begin				
			#correct
			variableNames = variableNames + "corr_";
			if i < 10 then
				variableNames = variableNames + "0";
			end;
			variableNames = variableNames + string(i);
			variableNames = variableNames + ",";
			i = i + 1;
		end;
		
		loop
			int i = 1
		until
			i > 80
		begin				
			#stimulus
			variableNames = variableNames + "stim_";
			if i < 10 then
				variableNames = variableNames + "0";
			end;
			variableNames = variableNames + string(i);
			variableNames = variableNames + ",";
			i = i + 1;
		end;
		
		loop
			int i = 1
		until
			i > 80
		begin				
			#position
			variableNames = variableNames + "pos_";
			if i < 10 then
				variableNames = variableNames + "0";
			end;
			variableNames = variableNames + string(i);
			variableNames = variableNames + ",";
			i = i + 1;
		end;
		
		loop
			int i = 1
		until
			i > 80
		begin				
			#answer given
			variableNames = variableNames + "given_";
			if i < 10 then
				variableNames = variableNames + "0";
			end;
			variableNames = variableNames + string(i);
			variableNames = variableNames + ",";
			i = i + 1;
		end;
	
		loop
			int i = 1
		until
			i > 80
		begin				
			#go Trial
			variableNames = variableNames + "go_";
			if i < 10 then
				variableNames = variableNames + "0";
			end;
			variableNames = variableNames + string(i);
			variableNames = variableNames + ",";
			i = i + 1;
		end;
		
		#write to file
		output1.print(variableNames);
		output1.print("\n");
		end;
		
		#WRITE DATA
		string output_data = "";
		output_data = output_data + vpCode;
		output_data = output_data + ",";
		output_data = output_data + date();
		output_data = output_data + ",";
		output_data = output_data + string(experimentGroup);
		output_data = output_data + ",,";
		output_data = output_data + string(tooShort);
		output_data = output_data + ",";
		output_data = output_data + string(correctSum);
		output_data = output_data + ",";
		output_data = output_data + string(correctCat1Sum);
		output_data = output_data + ",";
		output_data = output_data + string(correctCat2Sum);
		output_data = output_data + ",";
		output_data = output_data + string(correctSNSSum);
		output_data = output_data + ",";
		output_data = output_data + string(correctNeutralSum);
		output_data = output_data + ",";
		output_data = output_data + string(correctSNS1Sum);
		output_data = output_data + ",";		
		output_data = output_data + string(correctSNS2Sum);
		output_data = output_data + ",";
		output_data = output_data + string(correctNS1Sum);
		output_data = output_data + ",";
		output_data = output_data + string(correctNS2Sum);
		output_data = output_data + ",";
		output_data = output_data + string(correctGoSum);
		output_data = output_data + ",";
		output_data = output_data + string(correctGoCat1Sum);
		output_data = output_data + ",";
		output_data = output_data + string(correctGoCat2Sum);
		output_data = output_data + ",";
		output_data = output_data + string(correctGoSNSSum);
		output_data = output_data + ",";		
		output_data = output_data + string(correctGoNeutralSum);
		output_data = output_data + ",";
		output_data = output_data + string(correctGoSNS1Sum);
		output_data = output_data + ",";
		output_data = output_data + string(correctGoSNS2Sum);
		output_data = output_data + ",";
		output_data = output_data + string(correctGoNS1Sum);
		output_data = output_data + ",";
		output_data = output_data + string(correctGoNS2Sum);
		output_data = output_data + ",";
		output_data = output_data + string(correctNoGoSum);
		output_data = output_data + ",";
		output_data = output_data + string(correctNoGoCat1Sum);
		output_data = output_data + ",";		
		output_data = output_data + string(correctNoGoCat2Sum);
		output_data = output_data + ",";
		output_data = output_data + string(correctNoGoSNSSum);
		output_data = output_data + ",";
		output_data = output_data + string(correctNoGoNeutralSum);
		output_data = output_data + ",";
		output_data = output_data + string(correctNoGoSNS1Sum);
		output_data = output_data + ",";
		output_data = output_data + string(correctNoGoSNS2Sum);
		output_data = output_data + ",";
		output_data = output_data + string(correctNoGoNS1Sum);
		output_data = output_data + ",";
		output_data = output_data + string(correctNoGoNS2Sum);
		output_data = output_data + ",";		
		output_data = output_data + string(falseSum);
		output_data = output_data + ",";
		output_data = output_data + string(falseCat1Sum);
		output_data = output_data + ",";
		output_data = output_data + string(falseCat2Sum);
		output_data = output_data + ",";
		output_data = output_data + string(falseSNSSum);
		output_data = output_data + ",";
		output_data = output_data + string(falseNeutralSum);
		output_data = output_data + ",";
		output_data = output_data + string(falseSNS1Sum);
		output_data = output_data + ",";		
		output_data = output_data + string(falseSNS2Sum);
		output_data = output_data + ",";
		output_data = output_data + string(falseNS1Sum);
		output_data = output_data + ",";
		output_data = output_data + string(falseNS2Sum);
		output_data = output_data + ",";
		output_data = output_data + string(falseGoSum);
		output_data = output_data + ",";
		output_data = output_data + string(falseGoCat1Sum);
		output_data = output_data + ",";
		output_data = output_data + string(falseGoCat2Sum);
		output_data = output_data + ",";
		output_data = output_data + string(falseGoSNSSum);
		output_data = output_data + ",";		
		output_data = output_data + string(falseGoNeutralSum);
		output_data = output_data + ",";
		output_data = output_data + string(falseGoSNS1Sum);
		output_data = output_data + ",";
		output_data = output_data + string(falseGoSNS2Sum);
		output_data = output_data + ",";
		output_data = output_data + string(falseGoNS1Sum);
		output_data = output_data + ",";
		output_data = output_data + string(falseGoNS2Sum);
		output_data = output_data + ",";
		output_data = output_data + string(falseNoGoSum);
		output_data = output_data + ",";
		output_data = output_data + string(falseNoGoCat1Sum);
		output_data = output_data + ",";		
		output_data = output_data + string(falseNoGoCat2Sum);
		output_data = output_data + ",";
		output_data = output_data + string(falseNoGoSNSSum);
		output_data = output_data + ",";
		output_data = output_data + string(falseNoGoNeutralSum);
		output_data = output_data + ",";
		output_data = output_data + string(falseNoGoSNS1Sum);
		output_data = output_data + ",";
		output_data = output_data + string(falseNoGoSNS2Sum);
		output_data = output_data + ",";
		output_data = output_data + string(falseNoGoNS1Sum);
		output_data = output_data + ",";
		output_data = output_data + string(falseNoGoNS2Sum);
		output_data = output_data + ",";				
		output_data = output_data + string(reactionSum);
		output_data = output_data + ",";
		output_data = output_data + string(reactionCat1Sum);
		output_data = output_data + ",";
		output_data = output_data + string(reactionCat2Sum);
		output_data = output_data + ",";
		output_data = output_data + string(reactionSNSSum);
		output_data = output_data + ",";
		output_data = output_data + string(reactionNeutralSum);
		output_data = output_data + ",";
		output_data = output_data + string(reactionGoSum);
		output_data = output_data + ",";
		output_data = output_data + string(reactionNoGoSum);
		output_data = output_data + ",";
		output_data = output_data + string(reactionSNS1Sum);
		output_data = output_data + ",";
		output_data = output_data + string(reactionSNS2Sum);
		output_data = output_data + ",";
		output_data = output_data + string(reactionNS1Sum);
		output_data = output_data + ",";
		output_data = output_data + string(reactionNS2Sum);
		output_data = output_data + ",";
		output_data = output_data + string(noReactionSum);
		output_data = output_data + ",";
		output_data = output_data + string(noReactionCat1Sum);
		output_data = output_data + ",";
		output_data = output_data + string(noReactionCat2Sum);
		output_data = output_data + ",";		
		output_data = output_data + string(noReactionSNSSum);
		output_data = output_data + ",";
		output_data = output_data + string(noReactionNeutralSum);
		output_data = output_data + ",";
		output_data = output_data + string(noReactionGoSum);
		output_data = output_data + ",";
		output_data = output_data + string(noReactionNoGoSum);
		output_data = output_data + ",";
		output_data = output_data + string(noReactionSNS1Sum);
		output_data = output_data + ",";
		output_data = output_data + string(noReactionSNS2Sum);
		output_data = output_data + ",";
		output_data = output_data + string(noReactionNS1Sum);
		output_data = output_data + ",";		
		output_data = output_data + string(noReactionNS2Sum);
		output_data = output_data + ",,";
		#Reaction times
		output_data = output_data + string(correctRt);
		output_data = output_data + ",";
		output_data = output_data + string(correctCat1Rt);
		output_data = output_data + ",";
		output_data = output_data + string(correctCat2Rt);
		output_data = output_data + ",";
		output_data = output_data + string(correctSNSRt);
		output_data = output_data + ",";
		output_data = output_data + string(correctNeutralRt);
		output_data = output_data + ",";
		output_data = output_data + string(correctSNS1Rt);
		output_data = output_data + ",";		
		output_data = output_data + string(correctSNS2Rt);
		output_data = output_data + ",";
		output_data = output_data + string(correctNS1Rt);
		output_data = output_data + ",";
		output_data = output_data + string(correctNS2Rt);
		output_data = output_data + ",";
		output_data = output_data + string(falseRt);
		output_data = output_data + ",";
		output_data = output_data + string(falseCat1Rt);
		output_data = output_data + ",";
		output_data = output_data + string(falseCat2Rt);
		output_data = output_data + ",";
		output_data = output_data + string(falseSNSRt);
		output_data = output_data + ",";
		output_data = output_data + string(falseNeutralRt);
		output_data = output_data + ",";
		output_data = output_data + string(falseSNS1Rt);
		output_data = output_data + ",";		
		output_data = output_data + string(falseSNS2Rt);
		output_data = output_data + ",";
		output_data = output_data + string(falseNS1Rt);
		output_data = output_data + ",";
		output_data = output_data + string(falseNS2Rt);
		output_data = output_data + ",";
		output_data = output_data + string(reactionRt);
		output_data = output_data + ",";
		output_data = output_data + string(reactionCat1Rt);
		output_data = output_data + ",";
		output_data = output_data + string(reactionCat2Rt);
		output_data = output_data + ",";
		output_data = output_data + string(reactionSNSRt);
		output_data = output_data + ",";
		output_data = output_data + string(reactionNeutralRt);
		output_data = output_data + ",";
		output_data = output_data + string(reactionGoRt);
		output_data = output_data + ",";
		output_data = output_data + string(reactionSNS1Rt);
		output_data = output_data + ",";
		output_data = output_data + string(reactionSNS2Rt);
		output_data = output_data + ",";
		output_data = output_data + string(reactionNS1Rt);
		output_data = output_data + ",";
		output_data = output_data + string(reactionNS2Rt);
		output_data = output_data + ",,";
		
		#reaction times
			loop
				int i = 1
			until
				i > blocksInTotal
			begin
				loop
					int j = 1
				until
					j > stimuliPerBlock
				begin			
					# 1=stimulus,2=position,3=rt,4=answerGiven,5=answerCorrect,6=goTrial
					output_data = output_data + string(rawData[i][j][3]);
					output_data = output_data + ",";
					j = j + 1;
				end;
				i = i + 1;
			end;
		#correct 
			loop
				int i = 1
			until
				i > blocksInTotal
			begin
				loop
					int j = 1
				until
					j > stimuliPerBlock
				begin			
					# 1=stimulus,2=position,3=rt,4=answerGiven,5=answerCorrect,6=goTrial
					output_data = output_data + string(rawData[i][j][5]);
					output_data = output_data + ",";
					j = j + 1;
				end;
				i = i + 1;
			end;
		#stimulus
			loop
				int i = 1
			until
				i > blocksInTotal
			begin
				loop
					int j = 1
				until
					j > stimuliPerBlock
				begin			
					# 1=stimulus,2=position,3=rt,4=answerGiven,5=answerCorrect,6=goTrial
					output_data = output_data + string(rawData[i][j][1]);
					output_data = output_data + ",";
					j = j + 1;
				end;
				i = i + 1;
			end;
		#position
			loop
				int i = 1
			until
				i > blocksInTotal
			begin
				loop
					int j = 1
				until
					j > stimuliPerBlock
				begin			
					# 1=stimulus,2=position,3=rt,4=answerGiven,5=answerCorrect,6=goTrial
					output_data = output_data + string(rawData[i][j][2]);
					output_data = output_data + ",";
					j = j + 1;
				end;
				i = i + 1;
			end;
		#given
			loop
				int i = 1
			until
				i > blocksInTotal
			begin
				loop
					int j = 1
				until
					j > stimuliPerBlock
				begin			
					# 1=stimulus,2=position,3=rt,4=answerGiven,5=answerCorrect,6=goTrial
					output_data = output_data + string(rawData[i][j][4]);
					output_data = output_data + ",";
					j = j + 1;
				end;
				i = i + 1;
			end;
		#goTrial
			loop
				int i = 1
			until
				i > blocksInTotal
			begin
				loop
					int j = 1
				until
					j > stimuliPerBlock
				begin			
					# 1=stimulus,2=position,3=rt,4=answerGiven,5=answerCorrect,6=goTrial
					output_data = output_data + string(rawData[i][j][6]);
					output_data = output_data + ",";
					j = j + 1;
				end;
				i = i + 1;
			end;
	#WRITE TO FILE
	output1.print(output_data);
	output1.print("\n");
	output1.close();
	output2.print(output_data);
	output2.print("\n");	
	output2.close();
end;
#-- /DATA EXPORT --#